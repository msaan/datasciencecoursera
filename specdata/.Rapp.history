library (KernSmooth)
dataset_url <- "http://s3.amazonaws.com/practice_assignemt/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"#
> download.file(dataset_url, "diet_data.zip")
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
files <- list.files("diet_data")
files[1]
files[3:5]
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
dat <- data.frame()
for (i in 1:5) {}
dataset_url <- "https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "specdata")
list.files("specdata")
list.files("specdata")
pollutantmean
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean
pollutantmean("specdata", "sulfate", 1:10)
submit()
submit(pollutantmean)
pollutantmean <- function(directory, pollutant, id = 1:332) {#
 files <- list.files(directory, full.names = TRUE)#
 datas <- data.frame()#
 for (i in id){#
 datas <- rbind(datas, read.csv(files[i]))#
 }#
 mean(datas[,pollutant], na.rm=1)#
}
pollutantmean("specdata", "sulfate", 1:10)
("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
complete <- function(directory, id = 1:332) {#
 files <- list.files(directory, full.names = 1)#
 complete_files <- data.frame(id=integer(), nobs=integer())#
 for (i in 1:length(id)) {#
 complete_files[i,1] <- id[i]#
 complete_files[i, 2] <- sum(complete.cases(read.csv(files[id[i]])))#
 }#
complete_files#
}
corr <- function(directory, threshold = 0) {#
 id = 1:332#
 filename <- list.files(directory, full.names = TRUE)#
#
 result <-vector(mode="numeric", length=0)#
 for(i in seq(filename)) {#
   airquality <- read.csv(filename[i])#
   good <- complete.cases(airquality)#
   airquality <- airquality[good, ]#
   if (nrow(airquality) > threshold) {#
     # We need [[]] around pollutant instead of [] since airquality["sulfate"]#
     # is a data.frame but we need a vector here. Hence, [[]]. Please note thatusing either#
     #[[]] or [] gives the same results as the test cases#
     correlation <- cor(airquality[["sulfate"]], airquality[["nitrate"]])#
     result <- append(result, correlation)#
     #print(correlation)#
     }#
  }#
   result#
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))#
print(cc$nobs)
cc <- complete("specdata", 54)#
print(cc$nobs)
set.seed(42)#
cc <- complete("specdata", 332:1)#
use <- sample(332, 10)#
print(cc[use, "nobs"])
cr <- corr("specdata")                #
cr <- sort(cr)                #
set.seed(868)                #
out <- round(cr[sample(length(cr), 5)], 4)#
print(out)
cr <- corr("specdata", 129)                #
cr <- sort(cr)                #
n <- length(cr)                #
set.seed(197)                #
out <- c(n, round(cr[sample(n, 5)], 4))#
print(out)
cr <- corr("specdata", 2000)                #
n <- length(cr)                #
cr <- corr("specdata", 1000)                #
cr <- sort(cr)#
print(c(n, round(cr, 4)))
